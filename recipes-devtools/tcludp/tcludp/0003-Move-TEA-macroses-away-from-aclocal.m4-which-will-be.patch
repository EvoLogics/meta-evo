From 38961a5dec44eb63d1284c8548932ec1610d975d Mon Sep 17 00:00:00 2001
From: Maksym Komar <komar@evologics.de>
Date: Thu, 23 May 2019 18:07:13 +0200
Subject: [PATCH] Move TEA macroses away from aclocal.m4, which will be rebuild

---
 configure.in |   1 +
 m4/tea.m4    | 119 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 120 insertions(+)
 create mode 100644 m4/tea.m4

diff --git a/configure.in b/configure.in
index 04488d7..1f8979b 100755
--- a/configure.in
+++ b/configure.in
@@ -30,6 +30,7 @@ AC_INIT([udp], [1.0.11])
 TEA_INIT([3.9])

 AC_CONFIG_AUX_DIR(tclconfig)
+AC_CONFIG_MACRO_DIR([m4])

 TEA_PATH_TCLCONFIG
 TEA_LOAD_TCLCONFIG
diff --git a/m4/tea.m4 b/m4/tea.m4
new file mode 100644
index 0000000..83a84ab
--- /dev/null
+++ b/m4/tea.m4
@@ -0,0 +1,119 @@
+#
+# Include the TEA standard macro set
+#
+
+builtin(include,tclconfig/tcl.m4)
+
+#
+# Add here whatever m4 macros you want to define for your package
+#
+
+#--------------------------------------------------------------------
+# TEA_ENABLE_INET6
+#
+#	Check for Internet Protocol v6 support.
+#
+#	Adds a --enable-ipv6 option to the configure program and
+#	may define a new macro USE_INET6
+#
+#--------------------------------------------------------------------
+
+AC_DEFUN(TEA_ENABLE_INET6, [
+    AC_MSG_CHECKING([for INET6 support])
+    AC_ARG_ENABLE(inet6, [  --enable-ipv6          build with ipv6],
+        [inet6_ok=$enableval], [inet6_ok=no])
+    AC_DEFINE(USE_INET6)
+    if test "$inet6_ok" = "yes"
+    then
+        AC_MSG_RESULT([yes])
+        USE_INET6=1
+
+        AC_CHECK_LIB(c,getaddrinfo,[inet6_ok=yes],[inet6_ok=no])
+        if test "$inet6_ok" = "yes"
+        then
+            #CFLAGS="$CFLAGS -DUSE_INET6"
+            TEA_ADD_CFLAGS([-DUSE_INET6])
+        else
+            USE_INET6=no
+            AC_MSG_ERROR([Cannot find getaddrinfo() - inet6 support disabled])
+        fi
+
+    else
+        USE_INET6=0
+        AC_MSG_RESULT([no (default)])
+    fi
+
+    AC_SUBST(USE_INET6)
+])
+
+#-------------------------------------------------------------------------
+# TEA_PROG_DTPLITE
+#
+#	Do we have a usable dtplite program to use in document generation?
+#
+# Results
+#	Sets up DTPLITE
+#
+#-------------------------------------------------------------------------
+
+AC_DEFUN(TEA_PROG_DTPLITE, [
+    AC_PATH_TOOL([DTPLITE], [dtplite], [:])
+])
+
+#-------------------------------------------------------------------------
+# TCLUDP_CHECK_CLOEXEC
+#
+#	Do we have the FD_CLOEXEC flag available for fcntl()
+#
+# Results
+#	Sets up HAVE_FCNTL_H and HAVE_FLAG_FD_CLOEXEC
+#
+#-------------------------------------------------------------------------
+
+AC_DEFUN(TCLUDP_CHECK_CLOEXEC, [
+    AC_CHECK_HEADERS(fcntl.h)
+    AC_CACHE_CHECK([for usable FD_CLOEXEC flag],tcludp_cloexec,
+      AC_TRY_COMPILE([
+#if HAVE_UNISTD_H
+#include <unistd.h>
+#endif
+#if HAVE_FCNTL_H
+#include <fcntl.h>
+#endif
+],[fcntl(1, F_SETFD, FD_CLOEXEC);],tcludp_cloexec=yes,tcludp_cloexec=no))
+    if test "$tcludp_cloexec" = "yes" ; then
+        AC_DEFINE(HAVE_FLAG_FD_CLOEXEC, 1, [Can we use FD_CLOEXEC with fcntl?])
+    fi
+])
+
+#-------------------------------------------------------------------------
+# TCLUDP_CHECK_STRERROR
+#
+#	Do we have strerror()
+#
+# Results
+#	Sets HAVE_STRERROR
+#
+#-------------------------------------------------------------------------
+
+AC_DEFUN(TCLUDP_CHECK_STRERROR, [
+    AC_CHECK_LIB(c,strerror,[tcludp_strerror_ok=yes],[tcludp_strerror_ok=no])
+    if test "$tcludp_strerror_ok" = "yes"; then
+        TEA_ADD_CFLAGS([-DHAVE_STRERROR])
+    fi
+])
+
+#-------------------------------------------------------------------------
+# TCLUDP_CONFIG
+#
+#	Do any TCLUDP specific configuration here.
+#
+# Results
+#	See the individual sections referenced.
+#
+#-------------------------------------------------------------------------
+
+AC_DEFUN(TCLUDP_CONFIG, [
+    TCLUDP_CHECK_CLOEXEC
+    TCLUDP_CHECK_STRERROR
+])
